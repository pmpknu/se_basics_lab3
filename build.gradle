import java.awt.Toolkit

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinJvmVersion"
    id 'war'
    id 'net.nemerosa.versioning' version "$versioningPluginVersion"
}

group = groupName
version = versioning.info.full

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = JavaVersion.toVersion(sourceCompatibilityVersion)
    targetCompatibility = JavaVersion.toVersion(targetCompatibilityVersion)
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = encoding
}

dependencies {
    compileOnly jakartaEnterpriseCdiApi
    compileOnly jakartaValidationApi
    compileOnly jakartaEjbApi
    compileOnly jakartaFacesApi
    compileOnly jakartaServletApi
    compileOnly jakartaPersistenceApi
    compileOnly jakartaEeWebApi
    compileOnly jakartaJsonApi
    compileOnly jakartaJsonBindApi

    implementation jacksonDatabind
    implementation postgresql
    implementation primefaces
    implementation kotlinStdlib

    testImplementation junitApi
    testRuntimeOnly junitEngine
}

compileKotlin {
    kotlinOptions {
        jvmTarget = sourceCompatibilityVersion
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = sourceCompatibilityVersion
    }
}

task compile {
    compileKotlin
}

test {
    useJUnitPlatform()
}

task playSound {
    doLast {
        def toolkit = Toolkit.getDefaultToolkit()
        toolkit.beep()
    }
}

build.finalizedBy(playSound)

task team(type: Exec) {
    commandLine 'bash', './team.sh'
}
